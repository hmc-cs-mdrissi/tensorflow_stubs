from typing import Any
from typing_extensions import Self

from collections.abc import Mapping

from tensorflow.optimizers import Optimizer

class Policy:
    def __init__(self, name: str) -> None: ...
    @classmethod
    def from_config(cls, config: Mapping[str, Any], custom_objects: dict[str, type] | None = None) -> Self: ...
    def get_config(self) -> dict[str, Any]: ...

def global_policy() -> Policy: ...
def set_global_policy(policy: str | Policy) -> None: ...

class LossScaleOptimizer(Optimizer): ...
